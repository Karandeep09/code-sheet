<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Algorithms for Competitive Programming</title><description>The goal of this project is to translate the wonderful resource http://e-maxx.ru/algo which provides descriptions of many algorithms and data structures especially popular in field of competitive programming. Moreover we want to improve the collected knowledge by extending the articles and adding new articles to the collection.</description><link>https://cp-algorithms.com/</link><atom:link href="https://cp-algorithms.com/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/cp-algorithms/cp-algorithms</docs><language>en</language> <pubDate>Sat, 24 Feb 2024 18:53:09 -0000</pubDate> <lastBuildDate>Sat, 24 Feb 2024 18:53:09 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.12.1</generator> <item> <title>Convex hull construction</title> <description>&lt;h1&gt;Convex Hull construction&lt;/h1&gt;&lt;p&gt;In this article we will discuss the problem of constructing a convex hull from a set of points.&lt;/p&gt;&lt;p&gt;Consider $N$ points given on a p...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/convex-hull.html</link> <pubDate>Sat, 24 Feb 2024 18:50:04 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/convex-hull.html</guid> </item> <item> <title>Aho-Corasick algorithm</title> <description>&lt;h1&gt;Aho-Corasick algorithm&lt;/h1&gt;&lt;p&gt;The Aho-Corasick algorithm allows us to quickly search for multiple patterns in a text.The set of pattern strings is also called a...&lt;/p&gt;</description><link>https://cp-algorithms.com/string/aho_corasick.html</link> <pubDate>Sat, 24 Feb 2024 18:24:11 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/string/aho_corasick.html</guid> </item> <item> <title>Minimum-cost flow</title> <description>&lt;h1&gt;Minimum-cost flow - Successive shortest path algorithm&lt;/h1&gt;&lt;p&gt;Given a network $G$ consisting of $n$ vertices and $m$ edges.For each edge (generally speaking, or...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/min_cost_flow.html</link> <pubDate>Sat, 24 Feb 2024 18:20:48 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/min_cost_flow.html</guid> </item> <item> <title>Integer factorization</title> <description>&lt;h1&gt;Integer factorization&lt;/h1&gt;&lt;p&gt;In this article we list several algorithms for the factorization of integers, each of which can be either fast or varying levels of ...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/factorization.html</link> <pubDate>Fri, 23 Feb 2024 21:31:31 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/factorization.html</guid> </item> <item> <title>Linear Diophantine Equations</title> <description>&lt;h1&gt;Linear Diophantine Equation&lt;/h1&gt;&lt;p&gt;A Linear Diophantine Equation (in two variables) is an equation of the general form:&lt;/p&gt;&lt;p&gt;$$ax + by = c$$&lt;/p&gt;&lt;p&gt;where $a$, $b$, $c$ are...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/linear-diophantine-equation.html</link> <pubDate>Fri, 23 Feb 2024 20:57:36 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/linear-diophantine-equation.html</guid> </item> <item> <title>Search for a pair of intersecting segments</title> <description>&lt;h1&gt;Search for a pair of intersecting segments&lt;/h1&gt;&lt;p&gt;Given $n$ line segments on the plane. It is required to check whether at least two of them intersect with each ...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/intersecting_segments.html</link> <pubDate>Thu, 22 Feb 2024 17:55:40 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/intersecting_segments.html</guid> </item> <item> <title>Stars and bars</title> <description>&lt;h1&gt;Stars and bars&lt;/h1&gt;&lt;p&gt;Stars and bars is a mathematical technique for solving certain combinatorial problems.It occurs whenever you want to count the number of w...&lt;/p&gt;</description><link>https://cp-algorithms.com/combinatorics/stars_and_bars.html</link> <pubDate>Tue, 20 Feb 2024 18:23:49 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/combinatorics/stars_and_bars.html</guid> </item> <item> <title>Bit manipulation</title> <description>&lt;h1&gt;Bit manipulation&lt;/h1&gt;&lt;h2&gt;Binary number&lt;/h2&gt;&lt;p&gt;A &lt;strong&gt;binary number&lt;/strong&gt; is a number expressed in the base-2 numeral system or binary numeral system, it is a method of math...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/bit-manipulation.html</link> <pubDate>Sat, 17 Feb 2024 19:06:14 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/bit-manipulation.html</guid> </item> <item> <title>Fast Fourier transform</title> <description>&lt;h1&gt;Fast Fourier transform&lt;/h1&gt;&lt;p&gt;In this article we will discuss an algorithm that allows us to multiply two polynomials of length $n$ in $O(n \log n)$ time, which ...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/fft.html</link> <pubDate>Sat, 17 Feb 2024 19:04:10 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/fft.html</guid> </item> <item> <title>Operations on polynomials and series</title> <description>&lt;h1&gt;Operations on polynomials and series&lt;/h1&gt;&lt;p&gt;Problems in competitive programming, especially the ones involving enumeration some kind, are often solved by reducin...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/polynomial.html</link> <pubDate>Mon, 12 Feb 2024 20:53:53 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/polynomial.html</guid> </item> <item> <title>Primality tests</title> <description>&lt;h1&gt;Primality tests&lt;/h1&gt;&lt;p&gt;This article describes multiple algorithms to determine if a number is prime or not.&lt;/p&gt;&lt;h2&gt;Trial division&lt;/h2&gt;&lt;p&gt;By definition a prime number does...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/primality_tests.html</link> <pubDate>Sun, 11 Feb 2024 16:00:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/primality_tests.html</guid> </item> <item> <title>Longest increasing subsequence</title> <description>&lt;h1&gt;Longest increasing subsequence&lt;/h1&gt;&lt;p&gt;We are given an array with $n$ numbers: $a[0 \dots n-1]$.The task is to find the longest, strictly increasing, subsequence...&lt;/p&gt;</description><link>https://cp-algorithms.com/sequences/longest_increasing_subsequence.html</link> <pubDate>Sat, 10 Feb 2024 08:13:33 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/sequences/longest_increasing_subsequence.html</guid> </item> <item> <title>Maximum flow - Push-relabel algorithm</title> <description>&lt;h1&gt;Maximum flow - Push-relabel algorithm&lt;/h1&gt;&lt;p&gt;The push-relabel algorithm (or also known as preflow-push algorithm) is an algorithm for computing the maximum flow ...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/push-relabel.html</link> <pubDate>Mon, 29 Jan 2024 14:47:56 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/push-relabel.html</guid> </item> <item> <title>Introducton to Dynamic Programming</title> <description>&lt;h1&gt;Introduction to Dynamic Programming&lt;/h1&gt;&lt;p&gt;The essence of dynamic programming is to avoid repeated calculation. Often, dynamic programming problems are naturall...&lt;/p&gt;</description><link>https://cp-algorithms.com/dynamic_programming/intro-to-dp.html</link> <pubDate>Sun, 28 Jan 2024 19:51:12 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/dynamic_programming/intro-to-dp.html</guid> </item> <item> <title>Euler&#39;s totient function</title> <description>&lt;h1&gt;Euler&#39;s totient function&lt;/h1&gt;&lt;p&gt;Euler&#39;s totient function, also known as &lt;strong&gt;phi-function&lt;/strong&gt; $\phi (n)$, counts the number of integers between 1 and $n$ inclusive, w...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/phi-function.html</link> <pubDate>Sat, 27 Jan 2024 07:15:28 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/phi-function.html</guid> </item> <item> <title>Minkowski sum of convex polygons</title> <description>&lt;h1&gt;Minkowski sum of convex polygons&lt;/h1&gt;&lt;h2&gt;Definition&lt;/h2&gt;&lt;p&gt;Consider two sets $A$ and $B$ of points on a plane. Minkowski sum $A + B$ is defined as ${a + b| a \in A, ...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/minkowski.html</link> <pubDate>Fri, 26 Jan 2024 03:52:43 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/minkowski.html</guid> </item> <item> <title>Fenwick Tree</title> <description>&lt;h1&gt;Fenwick Tree&lt;/h1&gt;&lt;p&gt;Let, $f$ be some group operation (binary associative function over a set with identity element and inverse elements) and $A$ be an array of i...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/fenwick.html</link> <pubDate>Wed, 24 Jan 2024 19:02:09 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/fenwick.html</guid> </item> <item> <title>Sqrt Decomposition</title> <description>&lt;h1&gt;Sqrt Decomposition&lt;/h1&gt;&lt;p&gt;Sqrt Decomposition is a method (or a data structure) that allows you to perform some common operations (finding sum of the elements of ...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/sqrt_decomposition.html</link> <pubDate>Wed, 24 Jan 2024 08:54:20 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/sqrt_decomposition.html</guid> </item> <item> <title>Euclidean algorithm for computing the greatest common divisor</title> <description>&lt;h1&gt;Euclidean algorithm for computing the greatest common divisor&lt;/h1&gt;&lt;p&gt;Given two non-negative integers $a$ and $b$, we have to find their &lt;strong&gt;GCD&lt;/strong&gt; (greatest common ...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/euclid-algorithm.html</link> <pubDate>Thu, 18 Jan 2024 18:04:20 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/euclid-algorithm.html</guid> </item> <item> <title>Maximum flow - Push-relabel algorithm improved</title> <description>&lt;h1&gt;Maximum flow - Push-relabel method improved&lt;/h1&gt;&lt;p&gt;We will modify the &lt;a href=&#34;push-relabel.md&#34;&gt;push-relabel method&lt;/a&gt; to achieve a better runtime.&lt;/p&gt;&lt;h2&gt;Description&lt;/h2&gt;&lt;p&gt;The mo...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/push-relabel-faster.html</link> <pubDate>Sat, 06 Jan 2024 04:53:25 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/push-relabel-faster.html</guid> </item> </channel></rss>